name: Deploy to DigitalOcean

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: dist/

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files-20.x
        path: dist/

    - name: Deploy to DigitalOcean App Platform
      uses: digitalocean/app_action@v1.1.6
      with:
        app_name: my-portfolio
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    # Alternative: Deploy to Droplet via SSH
    # - name: Deploy to Droplet
    #   uses: appleboy/ssh-action@v1.0.3
    #   with:
    #     host: ${{ secrets.DROPLET_HOST }}
    #     username: ${{ secrets.DROPLET_USERNAME }}
    #     key: ${{ secrets.DROPLET_SSH_KEY }}
    #     script: |
    #       cd /var/www/my-portfolio
    #       git pull origin main
    #       docker-compose down
    #       docker-compose up --build -d
